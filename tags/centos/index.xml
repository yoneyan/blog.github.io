<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CentOS on のんびりと生きたい</title>
    <link>https://yoneyan.dev/tags/centos/</link>
    <description>Recent content in CentOS on のんびりと生きたい</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 31 Mar 2019 20:02:44 +0900</lastBuildDate>
    
	<atom:link href="https://yoneyan.dev/tags/centos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CentOS7でLACPとタグVLANを使ってみる</title>
      <link>https://yoneyan.dev/tech/network/using-lacp-and-tagged-vlan-on-centos7/</link>
      <pubDate>Sun, 31 Mar 2019 20:02:44 +0900</pubDate>
      
      <guid>https://yoneyan.dev/tech/network/using-lacp-and-tagged-vlan-on-centos7/</guid>
      <description>当方の環境で使っているCentOS7でLACPとタグVLANを使う必要が出てきたのでその際に方法をここに備忘録として書きます。
環境 CentOS=========L3 Switch(vlan10,vlan20)
2つのLANケーブルを使って、LACPでリンクアグリゲーションを組みます。
CentOS側のNIC：eth0,eth1
設定する １． いらないものを排除する systemctl stop NetworkManager systemctl disable NetworkManager  NetworkManagerが邪魔になるので、停止＆無効にします。
２．bonding機能を有効にする modprobe bonding  これをしないと、リンクアグリゲーションができないので、忘れずに実行して下さい。
３．コンフィグを書いていく 3.1．bond0の設定 vi /etc/sysconfig/network-scripts/ifcfg-bond0  DEVICE=bond0 NAME=bond0 TYPE=Bond ONBOOT=yes BOOTPROTO=none BONDING_OPTS=&amp;quot;downdelay=0 miimon=100 mode=802.3ad updelay=0&amp;quot; BONDING_MASTER=yes  3.2．LAGにするインタフェースの設定 vi /etc/sysconfig/network-scripts/ifcfg-eth0  DEVICE=eth0 TYPE=Ethernet BOOTPROTO=none ONBOOT=yes NM_CONTROLLED=no IPV6INIT=no MASTER=bond0 SLAVE=yes  これでeth0は完了です。次にeth1の設定をしていきます。
vi /etc/sysconfig/network-scripts/ifcfg-eth1  DEVICE=eth1 TYPE=Ethernet BOOTPROTO=none ONBOOT=yes NM_CONTROLLED=no IPV6INIT=no MASTER=bond0 SLAVE=yes  3.3．Bond0に対するTagVLANの設定 VLAN10の設定
vi /etc/sysconfig/network-scripts/ifcfg-bond0.10  TYPE=&amp;quot;Ethernet&amp;quot; BOOTPROTO=none DEVICE=&amp;quot;bond0.</description>
    </item>
    
    <item>
      <title>CentOSでリンクアグリゲーションの設定をしてみる</title>
      <link>https://yoneyan.dev/post/try-setting-linkaggregation-on-centos/</link>
      <pubDate>Mon, 19 Nov 2018 01:29:33 +0900</pubDate>
      
      <guid>https://yoneyan.dev/post/try-setting-linkaggregation-on-centos/</guid>
      <description>今回はCentOSでIEEE 802.3ad規格のリンクアグリゲーションを構築してみます。 IEEE 802.3adとは国際で定められたリンクアグリゲーションの規格のことを指します。 この記事ではここからLAGと表記していきます。 この記事ではCentOSにリンクアグリゲーションの設定を最初からやっていきます。
リンクアグリゲーションとは？ この記事を見てくださっている方はおわかりだと思いますが、LAGとはLANケーブルを数本束ねて高速化＆耐障害性に優れているものになっています。 例：1GbEのケーブルを2本挿して、LAGにすると、２Gbpsの帯域まで確保することが可能になります。 もし、一本でも抜けたり故障などで切断されても、冗長化もされているので通常の１Gbpsで通信します。 このように、絶対止まってほしくないものやNASのように速度が求められていて、止まってほしくないもので使うときに非常に必要になる技術です。
設定方法 設定方法として、以下の2つがあります。
 nmtui（GUI） nmcli（CUI)  今回はこの内のnmtuiを使った設定方法を紹介します。 nmtuiとnmcliはNetworkManagerの管理ツール的なものと思っていただいても間違っていないです。 環境はCentOS7.5を使用しています。
設定していく 1.nmtuiを起動する sudo nmtui
恐らく、管理者権限ではないと設定出来ない可能性が高いです。  

こんな感じのネットワークの設定画面が表示されます。
2.LAGの設定をしていく Edit a connectionを選択してから、Addを選択すると、下のようなものが出てきます。
   LAGを使う場合はBondを選択します。
3.bondの設定をしていく    AddでEthernetを選択し、Device名を手打ちでします。 それから、Modeで802.3adを選択すると、リンクアグリゲーションを使うことが出来るようになります。 IPv4を固定にしたい場合は、Manualですることができます。 最後にOKを選択し、ダイアログを閉じます。 これでLAGを使用することが可能になります。
4.IPアドレスを取得＆pingが通るか確認する google.co.jpにpingが通るか確認するには
ping google.co.jp  IPアドレスが取得されているか確認したい場合は
ip addr  これで確認することが可能になります。</description>
    </item>
    
    <item>
      <title>CentOSのOpenVPNサーバーを構築してみる</title>
      <link>https://yoneyan.dev/tech/network/building-centos-openvpn-server/</link>
      <pubDate>Fri, 07 Sep 2018 20:00:06 +0900</pubDate>
      
      <guid>https://yoneyan.dev/tech/network/building-centos-openvpn-server/</guid>
      <description>OpenVPNを使ってVPSと自宅のpfsenseにつないでみました。
この記事の構成 このテーマは3つに分けて、記事にしていく予定です。
その１:VPS側（サーバー側）の設定
その２:pfsense側（クライアント側）の設定
その３:ファイアーウォールの設定
VPS側で
OpenVPNの設定をしていく この記事ではCentOSを使った紹介をしていきます。
最初にやっておくこと
CentOSにepelのレポジトリを使えるようにしておきましょう
関係するパッケージをインストールする yum --enablerepo=epel -y install openvpn easy-rsa  フォルダを作る mkdir /etc/openvpn/easy-rsa  フォルダ群をコピー cp /usr/share/easy-rsa/***/* /etc/openvpn/easy-rsa/ -R  米印の部分にはeasy-rsaのバージョンを入れてください。（執筆時は3.03です。）
認証局を作る cd /etc/openvpn/easy-rsa ./easyrsa init-pki ./easyrsa build-ca ./easyrsa gen-dh cd /etc/openvpn openvpn --genkey --secret /etc/openvpn/ta.key  詳しくはよくわかりませんが、これだけで認証局が超簡単に作ることができます。
./easyrsa build-caを実行すると&amp;hellip;
Enter PEM pass phrase:  こういう物が出てくるので、適当に自分で考えてパスフレーズを入力します。
サーバー側の証明書を作成 パスワードがめんどくさいのでパスワードなし(no pass)にします。
cd /etc/openvpn/easy-rsa ./easyrsa build-server-full server nopass  Server側のkey:/etc/openvpn/easy-rsa/pki/private/server.key
Server側のcrt:/etc/openvpn/easy-rsa/pki/issued/server.crt
クライアント側の証明書を作成 こちらもパスワードがめんどくさいのでnopassにします。</description>
    </item>
    
  </channel>
</rss>